set encoding=utf8
using modex Person-modex.xml
using groups Person
set defaultAction=>CreateSpecificEntity()

use firstname.lst,prefirstname.lst
use title.lst,function_title.lst
use person.lst

@particule=(de,da,le,van,von,el,al,Al,del,Del,De,La)

#----------------------------------------------------------------------
# contextual rules for person recognition
#----------------------------------------------------------------------

#------------------------------
# pape Jean-Paul II
# (T_Acc|T_Aco|T_Asc|T_Aso) = alpha capital/small roman ordinal/cardinal: too noisy, use a simple dynasty order numbers list
@DynastyOrder=(I,II,III,IV,V,VI,VII,VIII,IX,X,XI,XII,XIII,XIV,XV,XVI,XVII,XVIII,XIX,XX)
# OME @Firstname:[(@PreFirstname)?]:$NP? @DynastyOrder:PERSON:=>NormalizePersonName()

#------------------------------
#@Firstname:[(@Title|@FunctionTitle)?]:(@particule? ($NP|t_capital)){1-2}:PERSON:=>NormalizePersonName()

# hack to take initials into account -> should be in tokenizer
@Initial=(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z)

@PersonNamePart=(t_capital_1st,t_capital,$NP)

#[$PREP]::(@PersonNamePart){0-2}:PERSON:=>NormalizePersonName()

#[$PREP]:[(@Title|@FunctionTitle)]:(@PersonNamePart){0-2}:PERSON:=>NormalizePersonName()

#[$PREP]::(@PersonNamePart){0-2} [(, @FunctionTitle)]:PERSON:=>NormalizePersonName()

# rule Obama
Barack::Obama:PERSON:
=>AddEntityFeature(trigger,"firstname")
=>AddEntityFeature(right,"lastname")
=>NormalizeEntity()
=<ClearEntityFeatures()

# generic rule firstname components without stop condition
@Firstname:(@Title|@FunctionTitle)?:(@Initial .?)? (@particule? @PersonNamePart){1-2}:PERSON:
=>AddEntityFeature(left,"title")
=>AddEntityFeature(trigger,"firstname")
=>AppendEntityFeature(right.1.1,"firstname")
=>AppendEntityFeature(right.1.2,"firstname")
=>AddEntityFeature(right.2.1,"lastname")
=>AppendEntityFeature(right.2.2,"lastname")
=>NormalizeEntity()
=<ClearEntityFeatures()

# generic rule firstname components with stop condition
# @Firstname:[(@Title|@FunctionTitle)?]:(@Initial .?)? (@particule? @PersonNamePart){1-2} [($DET|$PRON|$ADJ|$V)]:PERSON:
# +AddEntityFeature(trigger.1,"firstname")
# +AddEntityFeature(left.1,"title")
# +AppendEntityFeature(right.1.1,"firstname")
# +AppendEntityFeature(right.1.2,"firstname")
# +AddEntityFeature(right.2.1,"lastname")
# +AppendEntityFeature(right.2.2,"lastname")
# OME =>NormalizeEntity()
# OME =<ClearEntityFeatures()

# rule firstname components
# OME @Firstname:[(@Title|@FunctionTitle)?]:(@Initial .?)? (@particule? @PersonNamePart){1-2}:PERSON:
# OME +AddEntityFeature(trigger.1,"firstname")
# OME +AddEntityFeature(left.1,"title")
# OME +AppendEntityFeature(right.1.1,"firstname")
# OME +AppendEntityFeature(right.1.2,"firstname")
# OME +AddEntityFeature(right.2.1,"lastname")
# OME +AppendEntityFeature(right.2.2,"lastname")
# OME =>NormalizeEntity()
# OME =<ClearEntityFeatures()
# OME # =>NormalizePerson()
# OME #+AddEntityFeature(right.2.1,right.2.2,"lastname")
# OME # +AddEntityFeature(right.2.2,"lastname")

# OME @PersonNamePart:[(@Title|@FunctionTitle)]:(@PersonNamePart){0-2}:PERSON:=>NormalizePersonName()

# OME @PersonNamePart:[$PREP] (@PersonNamePart){0-2}:[(, @FunctionTitle)]:PERSON:=>NormalizePersonName()

# OME @PersonNamePart:(@PersonNamePart){0-2}:[(, @FunctionTitle)]:PERSON:=>NormalizePersonName()

# OME @Firstname:[(@Title|@FunctionTitle)]:[($DET|$PRON|$ADJ|$V)]:PERSON:=>NormalizePersonName()


# !! cannot find two different entities with same rule !!
#t_capital_1st:[@TitlePlural]:(t_capital_1st|$NP){0-2} [et] (t_capital_1st|$NP){1-3}:PERSON:
#$NP:[@TitlePlural]:(t_capital_1st|$NP){0-2} [et] (t_capital_1st|$NP){1-3}:PERSON:
# => one rule for each part
# OME @PersonNamePart:[@TitlePlural]:(@PersonNamePart){0-2} [et]:PERSON:
# OME @PersonNamePart:[(@TitlePlural (@PersonNamePart){0-2} et)]:(@PersonNamePart){0-2}:PERSON:

# @Firstname:[(@Title|@FunctionTitle)?]:(@Initial .?)? (@particule? (t_capital_1st|t_capital)){1-2}:PERSON:=>NormalizePersonName()
# t_capital_1st:[(@Title|@FunctionTitle)]:(t_capital_1st|t_capital){0-2}:PERSON:=>NormalizePersonName()

# t_capital_1st:(t_capital_1st|t_capital){0-2}:[(, @FunctionTitle)]:PERSON:=>NormalizePersonName()


#------------------------------
# a list of known persons (single entities)

# OME @person:::PERSON:=>NormalizePersonName()

#------------------------------
# firstname without name ?
#@Firstname:::PERSON:=>NormalizePersonName()
